1. Does the Hero class need to know about the existence of the SuperHero class? (Hint: search for “SuperHero” in Hero.cpp)
No. Hero is not a SuperHero, which SuperHero class is implementing Hero class.

2. Does the SuperHero class need to know about the existence of the Hero class? (Hint: search for “Hero” in SuperHero.cpp)
Yes, that's why we are calling Hero.h in SuperHero.h, and using some properties of Hero class.

3. The program prints out “Ancient Battle!” when two Heroes fight. It prints out “Super Fight!” when two SuperHeroes fight. When you made a Hero fight a SuperHero, what did it print out?
Ancient Battle!, since it is using Hero class's * operator and not SuperHero's class.

4. True or False: is the following definition for main valid? Explain.
int main() {
Hero("Achilles", 20, 6) * Hero("Hector", 30, 5);
}
True, because the constructor is called with correct format, and objects are created correctly.

5. True or False: is the following definition for main valid? Explain.
int main() {
(Hero("Achilles", 20, 6) * Hero("Hector", 30, 5))
			 *
(Hero("Atalanta", 10, 3) * Hero("Hippolyta", 10, 2));
}
True, because it is both called correctly. Although Heros aren't saved in a variable, it should work properly.

Quiz Reflection

There is no quiz this week.